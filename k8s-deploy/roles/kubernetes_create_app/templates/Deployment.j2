apiVersion: v1
kind: Deployment
metadata:
    labels:
        app: "{{ item.deploy_name }}" 
        deployment: "{{ item.deploy_name }}"
    name: "{{ item.deploy_name }}"
    namespace: "{{ item.namespace }}"
spec:
  {% if item.replicas is defined %}
      
    replicas: {{ item.replicas }}
  {% else %}
      
    replicas: 1
  {% endif %}
    
    strategy:
        type: "RollingUpdate"
    selector:
      matchLabels:
        app: "{{ item.deploy_name }}"
        deployment: "{{ item.deploy_name }}"
    template:
        metadata:
            labels:
              app: "{{ item.deploy_name }}"
              deployment: "{{ item.deploy_name }}"
        spec:
            containers:
                - name: "{{ item.deploy_name }}"
                  image: {{ item.image }}
                  imagePullPolicy: Always
                  {% if item.env_vars is not none %}

                  env:
                  {% for key in item.env_vars %}
                  
                    - name: {{ key.split("=", 1)[0] }}
                      value: {{ key.split("=", 1)[1] }}                
                  {% endfor %}
                  {% endif %}

                  {% if item.routes is defined %}

                  {% if item.routes is not none %}

                  ports:
                  {% for key in item.routes %}
                  {% if key.port is not none %}

                     - containerPort: {{ key.port }}
                       protocol: TCP
                  {% endif %}
                  {% endfor %}
                  {% endif %}
                  {% endif %}

                  {% if item.volume is defined %}

                  {% if item.volume is not none %}

                  {% for key in item.volume %}

                  {% if key.localPath is not none %}

                   volumeMounts:
                    - mountPath: {{ key.localPath }}
                      name: {{ key.pv_name }}
                  {% endif %}
                  {% endfor %}
                  {% endif %}
                  {% endif %}

                  resources:        
                    limits:
                      {% if 'cpu' in item.keys() %}

                      cpu: {{ item.cpu.max }}
                      {% else %}

                      cpu: {{ cpu.max }}m
                      {% endif %}
                      {% if 'memory' in item.keys() %}

                      memory: {{ item.memory.max }}
                      {% else %}

                      memory: {{ memory.max }}Mi
                      {% endif %}

                    requests:
                      {% if 'cpu' in item.keys() %}
                      
                      cpu: {{ item.cpu.min }}
                      {% else %}

                      cpu: {{ cpu.min }}m
                      {% endif %}
                      {% if 'memory' in item.keys() %}

                      memory: {{ item.memory.min }}
                      {% else %}

                      memory: {{ memory.min }}Mi
                      {% endif %}
                      
          {% if item.volume is defined %}

          {% if item.volume is not none %}

          {% for key in item.volume %}

          {% if key.localPath is not none %}
          
          volumes:
            - name: {{ key.pv_name }}
              persistentVolumeClaim:
                claimName: {{ key.pv_name }}
          {% endif %}
          {% endfor %}
          {% endif %}
          {% endif %}