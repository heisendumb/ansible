---
- name: "Get deployment: {{ item.deploy_name }}"
  command: "kubectl get deployments -o json -n {{ item.namespace }}"
  register: dc_global

- set_fact:
    tun_pid_file: /tmp/helm_pid

- block:
    - name: "Set up a tunnel to tiller"
      shell: |
        tiller_pod="$(kubectl get pod -l app=helm,name=tiller --namespace kube-system -o name|cut -d/ -f2)"
        nohup kubectl port-forward "$tiller_pod" 44134:44134 --namespace kube-system </dev/null >/dev/null 2>&1 &
        echo "$!" >{{ tun_pid_file|quote }}
      args:
        creates: "{{ tun_pid_file }}"
      changed_when: false

    - name: "New-srv: {{ item.namespace }}/{{ item.deploy_name }}"
      command: |
        helm install {{ item.repo }}/{{ item.deploy_name }} --namespace {{ item.namespace }} --name {{ item.name }} {% if ('helm' in item.keys()) and (item.env_vars is not none) %} -f {{ item.env_vars }} {% endif %}

  always:
    - name: "Tear down the tunnel to tiller"
      shell: |
        kill "$(cat {{ tun_pid_file|quote }})" || true
        rm -f {{ tun_pid_file|quote }}
      args:
        removes: "{{ tun_pid_file }}"
      changed_when: false
  when: (item.deploy_name not in dc_global.stdout|from_json|json_query('items[*].metadata.labels.app')) and ('helm' in item.keys()) and (item.helm)

- name: "Template deployment for new app: {{ item.namespace }}/{{ item.deploy_name}}"
  template:
    src: DeploymentConfig.j2
    dest: DeploymentConfig.yml
  when: (item.deploy_name not in dc_global.stdout|from_json|json_query('items[*].metadata.labels.app')) and ('helm' in item.keys()) and not(item.helm)

- name: "New-app: {{ item.namespace }}/{{ item.deploy_name }}"
  k8s:
    state: present
    definition: "{{ lookup('file', 'DeploymentConfig.yml') | from_yaml }}"
  register: new_app_true
  when: (item.deploy_name not in dc_global.stdout|from_json|json_query('items[*].metadata.labels.app')) and ('helm' in item.keys()) and not(item.helm)

- name: "Get deployment: {{ item.deploy_name }}"
  command: "kubectl get deployments/{{ item.deploy_name }} -o json -n {{ item.namespace }}"
  register: dc_app
  when: ('helm' in item.keys()) and not(item.helm)

- name: "Get deployment - Helm: {{item.deploy_name}}-{{ item.deploy_name }}"
  command: "kubectl get deployments/{{ item.deploy_name }}-{{ item.deploy_name }} -o json -n {{ item.namespace }}"
  register: dc_app
  when: ('helm' in item.keys()) and (item.helm)
